<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lin.mapper.TeacherMapper">
  <resultMap id="BaseResultMap" type="com.lin.model.User">
    <id column="userid" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="position" jdbcType="VARCHAR" property="position" />
  </resultMap>
  <sql id="Base_Column_List">
    userid, username, password, position
  </sql>
  <select id="subjectTeacher" parameterType="Integer" resultType="com.lin.model.Subject">
    select * from subject where  teacherid=#{userid} and stuid is null order by subjectid
  </select>
  <update id="signOpen" parameterType="Integer">
    update subject set state = 1 where teacherid = #{userid} and subjectid = #{subjectid}
  </update>
  <update id="signOff" parameterType="Integer">
    update subject set state = 2 where teacherid = #{userid} and subjectid = #{subjectid}
  </update>
  <select id="signOpenAll" parameterType="Integer" resultType="com.lin.model.Subject">
    select * from subject where state=1 and teacherid =#{userid} and stuid is null
  </select>
  <select id="signOffAll" parameterType="Integer" resultType="com.lin.model.Subject">
    select * from subject where state=2 and teacherid =#{userid} and stuid is null
  </select>
  <delete id="cleanSign" parameterType="Integer" >
    delete  from sign where subjectid = #{subjectid}
  </delete>
  <select id="signAll" parameterType="Integer" resultType="com.lin.model.Sign">
    select * from sign where subjectid= #{subjectid}
  </select>
  <select id="student" parameterType="Integer" resultType="com.lin.model.Student">
    select * from student where stuid = #{userid}
  </select>
  <select id="stuName" parameterType="Integer" resultType="String">
    select name from student where stuid=#{userid}
  </select>
  <select id="subjectState" parameterType="Integer" resultType="Integer">
    select distinct state from subject where stuid is null and subjectid=#{subjectid} and teacherid =#{userid}
  </select>
  <select id="subjectName" parameterType="Integer" resultType="String">
    select subjectname from subject where stuid is null and subjectid=#{subjectid} and teacherid =#{userid}
  </select>
  <insert id="subjectAdd" >
    insert into subject values (#{subjectid},#{subjectname},#{stuid},#{userid},#{state})
  </insert>
  <delete id="studentDel" parameterType="Integer">
    delete from subject where subjectid=#{subjectid} and stuid=#{stuid} and teacherid=#{userid}
  </delete>
  <select id="studentAll" parameterType="Integer" resultType="com.lin.model.Student">
    select * from student where stuid=#{stuid}
  </select>
  <select id="stuId" parameterType="Integer" resultType="com.lin.model.Subject">
    select * from subject where subjectid=#{subjectid} and teacherid=#{userid} and stuid is not null
  </select>
  <select id="studentAddReady" parameterType="Integer" resultType="Integer">
    select stuid from subject where subjectid=#{subjectid} and stuid=#{stuid}
  </select>
  <select id="selectById" parameterType="Integer" resultType="com.lin.model.Student">
    select * from student where stuid=#{stuid}
  </select>
  <select id="Student selectByNameClass" parameterType="Integer" resultType="com.lin.model.Student">
    select * from student where name=#{name} and classname=#{classname}
  </select>
  <select id="selectByName" parameterType="String" resultType="com.lin.model.Student">
    select * from student where name=#{name}
  </select>
  <select id="selectByClass" parameterType="String" resultType="com.lin.model.Student">
    select * from student where classname=#{classname} and stuid is not null
  </select>
  <update id="passwd">
    update user set password =#{password} where userid=#{userid}
  </update>
  <select id="studentCount" parameterType="Integer" resultType="Integer">
    select count(*) from subject where subjectid=#{subjectid} and stuid is not null
  </select>
  <select id="subject" parameterType="Integer" resultType="com.lin.model.Subject">
    select * from subject where  teacherid=#{userid} and stuid is null order by subjectid
  </select>
  <select id="classname" resultType="String">
    select classname from student where stuid is null order by classname
  </select>
  <select id="studentShow"  parameterType="String" resultType="com.lin.model.Student">
    select * from student where classname =#{classname} and stuid is not null order by stuid
  </select>
  <delete id="studentAllDel" >
    delete  from subject where subjectid = #{subjectid} and stuid is not null
  </delete>
  <select id="score" parameterType="Integer" resultType="com.lin.model.Score">
    select * from score where stuid=#{stuid} and subjectid=#{subjectid}
  </select>
  <delete id="scoreDel" parameterType="Integer">
    delete from score where subjectid=#{subjectid} and stuid=#{stuid}
  </delete>
  <insert id="scoreAdd" >
    insert into score (subjectid, subjectname, score, stuid)values (#{subjectid},#{subjectname},#{score},#{stuid})
  </insert>
  <select id="material" parameterType="Integer" resultType="com.lin.model.Teacher">
    select * from teacher where teacherid=#{teacherid}
  </select>
</mapper>